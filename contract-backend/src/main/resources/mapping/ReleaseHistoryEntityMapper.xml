<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.along101.contract.dao.ReleaseHistoryEntityMapper" >
  <resultMap id="BaseResultMap" type="com.along101.contract.entity.ReleaseHistoryEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="appid" property="appid" jdbcType="VARCHAR" />
    <result column="revision_number" property="revisionNumber" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="insert_by" property="insertBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, tag, appid, revision_number, insert_time, update_time, insert_by, update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from release_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.along101.contract.entity.ReleaseHistoryEntity" useGeneratedKeys="true" keyProperty="id"  >
    insert into release_history (id, tag, appid,
      revision_number, insert_time, update_time,
      insert_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{tag,jdbcType=VARCHAR}, #{appid,jdbcType=VARCHAR},
      DATE_FORMAT(now(), '%y%m%d%H%i%s'), NOW(), NOW(),
      #{insertBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.along101.contract.entity.ReleaseHistoryEntity" >
    insert into release_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="appid != null" >
        appid,
      </if>
      <if test="revisionNumber != null" >
        revision_number,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="insertBy != null" >
        insert_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
      <if test="revisionNumber != null" >
        #{revisionNumber,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertBy != null" >
        #{insertBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.along101.contract.entity.ReleaseHistoryEntity" >
    update release_history
    <set >
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="appid != null" >
        appid = #{appid,jdbcType=VARCHAR},
      </if>
      <if test="revisionNumber != null" >
        revision_number = #{revisionNumber,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertBy != null" >
        insert_by = #{insertBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.along101.contract.entity.ReleaseHistoryEntity" >
    update release_history
    set tag = #{tag,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      revision_number = #{revisionNumber,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      insert_by = #{insertBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getLatestReleaseHistory" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from release_history where appid = #{appId}
    order by id desc  limit 1
  </select>

  <select id="selectByRevisionNumber" parameterType="java.util.Map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from release_history where revision_number = #{revisionNumber} and appId = #{appId}
  </select>
  <select id="queryReleaseHistories" parameterType="java.lang.String" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from release_history where  appId = #{appId}
    order by id desc
  </select>
  <select id="selectByTag" parameterType="java.util.Map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from release_history where  appId = #{appId} and tag = #{tag}
  </select>
</mapper>