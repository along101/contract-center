<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.along101.contract.dao.FileHistoryEntityMapper">
    <resultMap id="BaseResultMap" type="com.along101.contract.entity.FileHistoryEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="package_name" property="packageName" jdbcType="VARCHAR"/>
        <result column="appid" property="appid" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="insert_by" property="insertBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="release_history_id" property="releaseHistoryId" jdbcType="BIGINT"/>
        <result column="is_active" property="isActive" jdbcType="BIT"/>
        <result column="status" property="status" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.along101.contract.entity.FileHistoryEntity" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="summary" property="summary" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, package_name, appid,status, description, insert_time, update_time, insert_by,
    update_by, release_history_id, is_active
  </sql>
    <sql id="Blob_Column_List">
    content, summary
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from file_history
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.along101.contract.entity.FileHistoryEntity">
    insert into file_history (id, name, package_name,
      appid,status, description, insert_time,
      update_time, insert_by, update_by,
      release_history_id, is_active,
      content, summary)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{packageName,jdbcType=VARCHAR},
      #{appid,jdbcType=VARCHAR},#{status,jdbcType=BIT}, #{description,jdbcType=VARCHAR}, NOW(),
       NOW(), #{insertBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR},
      #{releaseHistoryId,jdbcType=BIGINT}, #{isActive,jdbcType=BIT},
      #{content,jdbcType=LONGVARCHAR}, #{summary,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.along101.contract.entity.FileHistoryEntity">
        insert into file_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="packageName != null">
                package_name,
            </if>
            <if test="appid != null">
                appid,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="insertTime != null">
                insert_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="insertBy != null">
                insert_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="releaseHistoryId != null">
                release_history_id,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="summary != null">
                summary,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null">
                #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="appid != null">
                #{appid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="insertTime != null">
                #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="insertBy != null">
                #{insertBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="releaseHistoryId != null">
                #{releaseHistoryId,jdbcType=BIGINT},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.along101.contract.entity.FileHistoryEntity">
        update file_history
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="packageName != null">
                package_name = #{packageName,jdbcType=VARCHAR},
            </if>
            <if test="appid != null">
                appid = #{appid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="insertTime != null">
                insert_time = #{insertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="insertBy != null">
                insert_by = #{insertBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="releaseHistoryId != null">
                release_history_id = #{releaseHistoryId,jdbcType=BIGINT},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="summary != null">
                summary = #{summary,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.along101.contract.entity.FileHistoryEntity">
    update file_history
    set name = #{name,jdbcType=VARCHAR},
      package_name = #{packageName,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      insert_by = #{insertBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      release_history_id = #{releaseHistoryId,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.along101.contract.entity.FileHistoryEntity">
    update file_history
    set name = #{name,jdbcType=VARCHAR},
      package_name = #{packageName,jdbcType=VARCHAR},
      appid = #{appid,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      insert_by = #{insertBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      release_history_id = #{releaseHistoryId,jdbcType=BIGINT},
      is_active = #{isActive,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="queryReleasedProtoFileVOs" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select a.id,
          a.name,
          a.package_name,
          a.appid,
          a.status,
          a.description,
          a.insert_time,
          a.update_time,
          a.insert_by,
          a.update_by,
          a.release_history_id,
          a.is_active,
          a.content,
          a.summary
          from file_history a
          join (select max(id) as id from file_history
            where appid = #{appId}
            and  id  <![CDATA[ <=  ]]> (select  max(c.id) from file_history c where  release_history_id <![CDATA[ = ]]> #{releaseHistoryId})
            group by package_name,name) as b on a.id = b.id
  </select>
    <select id="queryDeletedProtoFileVOsAfterLatestRelease" parameterType="java.lang.String"
            resultMap="ResultMapWithBLOBs">
        select a.id,
          a.name,
          a.package_name,
          a.appid,
          a.status,
          a.description,
          a.insert_time,
          a.update_time,
          a.insert_by,
          a.update_by,
          a.release_history_id,
          a.is_active,
          a.content,
          a.summary
          from file_history a
          where appId = #{appId}
            and  status = 2
            and id > (select max(id) from file_history where status = 1 and appid = #{appId})
    </select>


</mapper>